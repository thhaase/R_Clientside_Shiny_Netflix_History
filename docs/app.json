[{"name":"app.R","content":"# library(shinylive)\n# shinylive::export(appdir = \"app\", destdir = \"docs\")\n#\n\n\n\nlibrary(shinydashboard)\nlibrary(datasets)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(zoo)\nlibrary(stringr)\n\nui <- dashboardPage(\n  dashboardHeader(\n    title = \"Netflix Plots\"\n  ),\n  dashboardSidebar(disable = TRUE),\n  dashboardBody(\n    fluidRow(\n      box(\n        width = 3,\n        h2(\"Anleitung\"),\n        \"1. Besuche\", HTML(\"<a href='https://www.netflix.com/YourAccount'>Netflix Account<\/a>\") , br(),br(),\n        \"2. Klicke dort auf [Dein Profil] und kontrolliere, dass die Sprache auf Deutsch eingestellt ist\", br(),br(),\n        \"3. Klicke anschließend [Titelverlauf], scrolle herunter und klicke unten rechts auf [Alle herunterladen]\", br(),br(),\n        \"4. Kehre auf diese Website zurück und lade oben die heruntergeladene [.csv] Datei hoch\",br(),br(),\n        fileInput('file1', 'Lade hier die Netflixhistory hoch',\n                  accept = c('text/csv', 'text/comma-separated-values', 'text/plain', '.csv'))\n      ),\n      box(\n        title = \"Top 10 Serien\",\n        status = \"primary\",\n        solidHeader = TRUE,\n        width = 3,\n        plotOutput('plot_top10')\n      ),\n      box(\n        title = \"Aktivität pro Monat\",\n        status = \"danger\",\n        solidHeader = TRUE,\n        width = 3,\n        plotOutput('plot_months')\n      ),\n      box(\n        title = \"Aktivität pro Wochentag\",\n        status = \"success\",\n        solidHeader = TRUE,\n        width = 3,\n        plotOutput('plot_weekdays')\n      )\n    ),\n    fluidRow(\n      box(\n        title = \"Heatmap der Tagesaktivität\",\n        status = \"info\",\n        solidHeader = TRUE,\n        width = 6,\n        plotOutput('plot_heatmap')\n      ),\n      box(\n        title = \"Streams pro Tag\",\n        status = \"warning\",\n        solidHeader = TRUE,\n        width = 6,\n        plotOutput('plot_timeline')\n      )\n    )\n  )\n)\n\n\n\n\nserver <- shinyServer(function(input, output, session) {\n  \n  data <- reactive({ \n    req(input$file1)\n    inFile <- input$file1 \n    \n    df <- read.csv(inFile$datapath)\n    df$Date <- dmy(df$Date)\n    \n    df <- separate(data=df, col = Title, into = c(\"title\", \"staffel\", \"episode\"), sep = ': ')\n    \n    df <- df[!is.na(df$staffel),]\n    df <- df[!is.na(df$episode),]\n    \n    return(df)\n  })\n  \n  \n  ### Plots ###\n  output$plot_top10 <- renderPlot({\n    df <- data()\n    \n    marathon <- df %>%\n      count(title, Date)\n    #  marathon <- marathon[marathon$n >= 6,]\n    marathon <- marathon[order(marathon$Date),]\n    marathon_sorted <- marathon %>% group_by(title) %>% \n      summarise(n = sum(n)) %>% arrange(desc(n))\n    \n    marathon_sorted_plot <- marathon_sorted %>% \n      top_n(10) %>%\n      ggplot(aes(x = reorder(title, n), y = n)) +\n      geom_col(fill = \"#0097d6\") +\n      coord_flip() +\n      ggtitle(\"Top 10 Serien\", \"geschaute Episoden\") +\n      labs(x = \"Serien\", y = \"geschaute Episoden\") +\n      theme_minimal()\n    \n    marathon_sorted_plot\n  })\n  \n  output$plot_timeline <- renderPlot({\n    df <- data()\n    \n    netflix_per_time <- df %>% count(Date) %>% arrange(desc(n))\n    range <- range(pretty(df$Date))\n    netflix_per_time_plot <- ggplot(aes(x = Date, y = n, color = n), data = netflix_per_time) +\n      geom_col(color = c(\"#FFB90F\")) +\n      theme_minimal() +\n      theme(axis.text.x = element_text(angle = 90, hjust = 1)) + \n      ggtitle(\"Streams pro Tag\", \"Anzahl der pro Tag gestreamten Netflix Serien/Filme\") +\n      labs(x = \"Zeit\", y = \"geschaute Episoden/Filme\") +\n      scale_x_date(date_labels = \"%m %Y\", breaks = seq(as.Date(range[1]), as.Date(range[2]), by = \"2 months\"))\n    \n    netflix_per_time_plot\n    \n  })\n  \n  output$plot_heatmap <- renderPlot({\n    df <- data()\n    \n    netflix_per_day <- df %>% count(Date) %>% arrange(desc(n))\n    \n    netflix_per_day <- netflix_per_day[order(netflix_per_day$Date),]\n    netflix_per_day$diasemana <- wday(netflix_per_day$Date)\n    netflix_per_day$diasemanaF <- weekdays(netflix_per_day$Date, abbreviate = T)\n    netflix_per_day$mesF <- months(netflix_per_day$Date, abbreviate = T)\n    \n    netflix_per_day$diasemanaF <-factor(netflix_per_day$diasemana, levels = rev(1:7), labels = rev(c(\"Mo\",\"Di\",\"Mi\",\"Do\",\"Fr\",\"Sa\",\"So\")),ordered = TRUE)\n    netflix_per_day$mesF <- factor(month(netflix_per_day$Date),levels = as.character(1:12), labels = c(\"Januar\",\"Februar\",\"März\",\"April\",\"Mai\",\"Juni\",\"Juli\",\"August\",\"September\",\"Oktober\",\"November\",\"Dezember\"),ordered = TRUE)\n    netflix_per_day$añomes <- factor(as.yearmon(netflix_per_day$Date)) \n    netflix_per_day$semana <- as.numeric(format(netflix_per_day$Date,\"%W\"))\n    netflix_per_day$semanames <- ceiling(day(netflix_per_day$Date) / 7)\n    netflix_per_day_calendario <- ggplot(netflix_per_day, aes(semanames, diasemanaF, fill = netflix_per_day$n)) + \n      geom_tile(colour = \"white\") + \n      facet_grid(year(netflix_per_day$Date) ~ mesF) + \n      scale_fill_gradient(low = \"#FFD000\", high = \"#FF1919\") + \n      ggtitle(\"Aktivität pro Tag\", \"Heatmap der Tagesaktivität\") +\n      labs(x = \"Woche des Monats\", y = \"Wochentag\") +\n      labs(fill = \"Episodenanzahl\")\n    \n    netflix_per_day_calendario\n  })\n  \n  output$plot_weekdays <- renderPlot({\n    df <- data()\n    \n    netflix_per_day <- df %>% count(Date) %>% arrange(desc(n))\n    #\n    netflix_per_day <- netflix_per_day[order(netflix_per_day$Date),]\n    netflix_per_day$diasemana <- wday(netflix_per_day$Date)\n    netflix_per_day$diasemanaF <- weekdays(netflix_per_day$Date, abbreviate = T)\n    netflix_per_day$mesF <- months(netflix_per_day$Date, abbreviate = T)\n    #\n    netflix_per_day$diasemanaF <-factor(netflix_per_day$diasemana, levels = rev(1:7), labels = rev(c(\"Mo\",\"Di\",\"Mi\",\"Do\",\"Fr\",\"Sa\",\"So\")),ordered = TRUE)\n    netflix_per_day$mesF <- factor(month(netflix_per_day$Date),levels = as.character(1:12), labels = c(\"Januar\",\"Februar\",\"März\",\"April\",\"Mai\",\"Juni\",\"Juli\",\"August\",\"September\",\"Oktober\",\"November\",\"Dezember\"),ordered = TRUE)\n    netflix_per_day$añomes <- factor(as.yearmon(netflix_per_day$Date)) \n    netflix_per_day$semana <- as.numeric(format(netflix_per_day$Date,\"%W\"))\n    netflix_per_day$semanames <- ceiling(day(netflix_per_day$Date) / 7)\n    #\n    vista_dia <- netflix_per_day %>% count(diasemanaF)\n    vista_dia_plot <- vista_dia %>% \n      ggplot(aes(diasemanaF, n)) +\n      geom_col(fill = \"#5b59d6\") +\n      coord_polar()  +\n      theme_minimal() +\n      theme(axis.title.x = element_blank(),\n            axis.title.y = element_blank(),\n            axis.text.y = element_blank(),\n            axis.text.x = element_text(face = \"bold\"),\n            plot.title = element_text(size = 16, face = \"bold\")) +\n      ggtitle(\"Aktivität pro Wochentag\")\n    \n    vista_dia_plot\n    \n  })\n  \n  output$plot_months <- renderPlot({\n    df <- data()\n    \n    netflix_per_day <- df %>% count(Date) %>% arrange(desc(n))\n    #\n    netflix_per_day <- netflix_per_day[order(netflix_per_day$Date),]\n    netflix_per_day$diasemana <- wday(netflix_per_day$Date)\n    netflix_per_day$diasemanaF <- weekdays(netflix_per_day$Date, abbreviate = T)\n    netflix_per_day$mesF <- months(netflix_per_day$Date, abbreviate = T)\n    #\n    netflix_per_day$diasemanaF <-factor(netflix_per_day$diasemana, levels = rev(1:7), labels = rev(c(\"Mo\",\"Di\",\"Mi\",\"Do\",\"Fr\",\"Sa\",\"So\")),ordered = TRUE)\n    netflix_per_day$mesF <- factor(month(netflix_per_day$Date),levels = as.character(1:12), labels = c(\"Januar\",\"Februar\",\"März\",\"April\",\"Mai\",\"Juni\",\"Juli\",\"August\",\"September\",\"Oktober\",\"November\",\"Dezember\"),ordered = TRUE)\n    netflix_per_day$añomes <- factor(as.yearmon(netflix_per_day$Date)) \n    netflix_per_day$semana <- as.numeric(format(netflix_per_day$Date,\"%W\"))\n    netflix_per_day$semanames <- ceiling(day(netflix_per_day$Date) / 7)\n    #\n    vista_mes <- netflix_per_day %>% count(mesF)\n    vista_mes_plot <- vista_mes %>% \n      ggplot(aes(mesF, n)) +\n      geom_col(fill = \"#808000\") +\n      coord_polar()  +\n      theme_minimal() +\n      theme(axis.title.x = element_blank(),\n            axis.title.y = element_blank(),\n            axis.text.y = element_blank(),\n            axis.text.x = element_text(face = \"bold\"),\n            plot.title = element_text(size = 18, face = \"bold\")) +\n      ggtitle(\"Aktivität pro Monat\") \n    \n    vista_mes_plot\n    \n    \n  })\n})\n\n\nshinyApp(ui, server)","type":"text"}]
